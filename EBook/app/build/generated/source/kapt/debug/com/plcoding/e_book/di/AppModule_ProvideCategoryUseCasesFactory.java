// Generated by Dagger (https://dagger.dev).
package com.plcoding.e_book.di;

import com.plcoding.e_book.data.local.CategoryDao;
import com.plcoding.e_book.domain.repository.CategoryRepository;
import com.plcoding.e_book.domain.usecases.category.CategoryUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideCategoryUseCasesFactory implements Factory<CategoryUseCase> {
  private final Provider<CategoryRepository> categoryRepositoryProvider;

  private final Provider<CategoryDao> categoryDaoProvider;

  public AppModule_ProvideCategoryUseCasesFactory(
      Provider<CategoryRepository> categoryRepositoryProvider,
      Provider<CategoryDao> categoryDaoProvider) {
    this.categoryRepositoryProvider = categoryRepositoryProvider;
    this.categoryDaoProvider = categoryDaoProvider;
  }

  @Override
  public CategoryUseCase get() {
    return provideCategoryUseCases(categoryRepositoryProvider.get(), categoryDaoProvider.get());
  }

  public static AppModule_ProvideCategoryUseCasesFactory create(
      Provider<CategoryRepository> categoryRepositoryProvider,
      Provider<CategoryDao> categoryDaoProvider) {
    return new AppModule_ProvideCategoryUseCasesFactory(categoryRepositoryProvider, categoryDaoProvider);
  }

  public static CategoryUseCase provideCategoryUseCases(CategoryRepository categoryRepository,
      CategoryDao categoryDao) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCategoryUseCases(categoryRepository, categoryDao));
  }
}
