// Generated by Dagger (https://dagger.dev).
package com.plcoding.e_book.di;

import android.app.Application;
import com.plcoding.e_book.presentation.reading.ChapterDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideChapterDatabaseFactory implements Factory<ChapterDatabase> {
  private final Provider<Application> applicationProvider;

  public AppModule_ProvideChapterDatabaseFactory(Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public ChapterDatabase get() {
    return provideChapterDatabase(applicationProvider.get());
  }

  public static AppModule_ProvideChapterDatabaseFactory create(
      Provider<Application> applicationProvider) {
    return new AppModule_ProvideChapterDatabaseFactory(applicationProvider);
  }

  public static ChapterDatabase provideChapterDatabase(Application application) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideChapterDatabase(application));
  }
}
