// Generated by Dagger (https://dagger.dev).
package com.plcoding.e_book.presentation.Search;

import com.plcoding.e_book.domain.usecases.book.BooksUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SearchViewModel_Factory implements Factory<SearchViewModel> {
  private final Provider<BooksUseCase> booksUseCasesProvider;

  public SearchViewModel_Factory(Provider<BooksUseCase> booksUseCasesProvider) {
    this.booksUseCasesProvider = booksUseCasesProvider;
  }

  @Override
  public SearchViewModel get() {
    return newInstance(booksUseCasesProvider.get());
  }

  public static SearchViewModel_Factory create(Provider<BooksUseCase> booksUseCasesProvider) {
    return new SearchViewModel_Factory(booksUseCasesProvider);
  }

  public static SearchViewModel newInstance(BooksUseCase booksUseCases) {
    return new SearchViewModel(booksUseCases);
  }
}
