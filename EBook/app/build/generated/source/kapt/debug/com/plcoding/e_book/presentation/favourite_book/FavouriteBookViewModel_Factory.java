// Generated by Dagger (https://dagger.dev).
package com.plcoding.e_book.presentation.favourite_book;

import com.plcoding.e_book.domain.usecases.book.BooksUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FavouriteBookViewModel_Factory implements Factory<FavouriteBookViewModel> {
  private final Provider<BooksUseCase> booksUseCasesProvider;

  public FavouriteBookViewModel_Factory(Provider<BooksUseCase> booksUseCasesProvider) {
    this.booksUseCasesProvider = booksUseCasesProvider;
  }

  @Override
  public FavouriteBookViewModel get() {
    return newInstance(booksUseCasesProvider.get());
  }

  public static FavouriteBookViewModel_Factory create(
      Provider<BooksUseCase> booksUseCasesProvider) {
    return new FavouriteBookViewModel_Factory(booksUseCasesProvider);
  }

  public static FavouriteBookViewModel newInstance(BooksUseCase booksUseCases) {
    return new FavouriteBookViewModel(booksUseCases);
  }
}
