// Generated by Dagger (https://dagger.dev).
package com.plcoding.e_book.presentation.mybook;

import com.plcoding.e_book.domain.usecases.mybook.MyBookUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MyBookViewModel_Factory implements Factory<MyBookViewModel> {
  private final Provider<MyBookUseCase> myBookUseCaseProvider;

  public MyBookViewModel_Factory(Provider<MyBookUseCase> myBookUseCaseProvider) {
    this.myBookUseCaseProvider = myBookUseCaseProvider;
  }

  @Override
  public MyBookViewModel get() {
    return newInstance(myBookUseCaseProvider.get());
  }

  public static MyBookViewModel_Factory create(Provider<MyBookUseCase> myBookUseCaseProvider) {
    return new MyBookViewModel_Factory(myBookUseCaseProvider);
  }

  public static MyBookViewModel newInstance(MyBookUseCase myBookUseCase) {
    return new MyBookViewModel(myBookUseCase);
  }
}
