// Generated by Dagger (https://dagger.dev).
package com.plcoding.e_book.presentation.payment;

import com.plcoding.e_book.domain.usecases.book.BooksUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class paymentViewModel_Factory implements Factory<paymentViewModel> {
  private final Provider<BooksUseCase> booksUseCaseProvider;

  public paymentViewModel_Factory(Provider<BooksUseCase> booksUseCaseProvider) {
    this.booksUseCaseProvider = booksUseCaseProvider;
  }

  @Override
  public paymentViewModel get() {
    return newInstance(booksUseCaseProvider.get());
  }

  public static paymentViewModel_Factory create(Provider<BooksUseCase> booksUseCaseProvider) {
    return new paymentViewModel_Factory(booksUseCaseProvider);
  }

  public static paymentViewModel newInstance(BooksUseCase booksUseCase) {
    return new paymentViewModel(booksUseCase);
  }
}
